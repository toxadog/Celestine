function [Corrected, CorrectedRef,tform] = registerImages(Reference,NewImage)
%registerImages  Register grayscale images using auto-generated code from Registration Estimator app.
%  [MOVINGREG] = registerImages(MOVING,FIXED) Register grayscale images
%  MOVING and FIXED using auto-generated code from the Registration
%  Estimator app. The values for all registration parameters were set
%  interactively in the app and result in the registered image stored in the
%  structure array MOVINGREG.

% Auto-generated by registrationEstimator app on 03-May-2022
%-----------------------------------------------------------

ReferenceImage = Reference.Image;
ReferenceMask = Reference.Mask;
ReferenceROI = Reference.ROI;

% Normalize MOVING image

% Get linear indices to finite valued data
finiteIdx = isfinite(ReferenceImage(:));

% Replace NaN values with 0
ReferenceImage(isnan(ReferenceImage)) = 0;

% Replace Inf values with 1
ReferenceImage(ReferenceImage==Inf) = 1;

% Replace -Inf values with 0
ReferenceImage(ReferenceImage==-Inf) = 0;

% Normalize input data to range in [0,1].
MOVINGmin = min(ReferenceImage(:));
MOVINGmax = max(ReferenceImage(:));
if isequal(MOVINGmax,MOVINGmin)
    ReferenceImage = 0*ReferenceImage;
else
    ReferenceImage(finiteIdx) = (ReferenceImage(finiteIdx) - MOVINGmin) ./ (MOVINGmax - MOVINGmin);
end

% Default spatial referencing objects
fixedRefObj = imref2d(size(NewImage));
movingRefObj = imref2d(size(ReferenceImage));

% Phase correlation
tform = imregcorr(ReferenceImage,movingRefObj,NewImage,fixedRefObj,'transformtype','similarity','Window',true);
CorrectedRef = imwarp(ReferenceImage, movingRefObj, tform, 'OutputView', fixedRefObj, 'SmoothEdges', true);
CorrectedMask = imwarp(ReferenceMask, movingRefObj, tform, 'OutputView', fixedRefObj, 'SmoothEdges', true);
CorrectedROI = zeros(size(ReferenceROI));
for i=1:size(ReferenceROI,3)
    CorrectedROI(:,:,i) = imwarp(ReferenceROI(:,:,i), movingRefObj, tform, 'OutputView', fixedRefObj, 'SmoothEdges', true);
end
Corrected.Mask = CorrectedMask;
Corrected.ROI = CorrectedROI;
% Store spatial referencing object

end

